词云：wordcloud

ImageColorGenerator()
#默认RGB取色，可以设置从背景图片生成颜色值

WordCloud(builtins.object)
#width : int (default=400)
#height : int (default=200)
#max_words : number (default=200)
#background_color : color value (default="black")
#min_font_size : int (default=4)
#max_font_size : int or None (default=None)
#mask : nd-array or None (default=None)  设置背景图片
#stopwords : set of strings or None  用于忽略某些常见词汇

生成词云, 可以用generate输入全部文本(中文不好分词),也可以我们计算好词频后使用generate_from_frequencies函数，例如[('词a', 100),('词b', 90),('词c', 80)]

中文分词：jieba

1分词
1）精确模式：试图将句子最精确地切开，适合文本分析；
2）全模式：速度非常快，但不能解决歧义；
3）搜索引擎模式：在精确模式的基础上，对长词再次切分，提高召回率，适合用于搜索引擎分词。

cut(sentence, cut_all=False, HMM=True)
#cut_all 参数用来控制是否采用全模式(默认精确模式)； HMM 模型
cut_for_search(sentence, HMM=True)
#该方法适合用于搜索引擎构建倒排索引的分词，粒度比较细
#cut和cut_for_search返回的结构都是一个可迭代的 generator，可以用lcut 以及 lcut_for_search 直接返回 list

2关键词提取

基于 TF-IDF（term frequency–inverse document frequency） 算法
analyse.extract_tags(sentence, topK=20, withWeight=False, allowPOS=())
#topK： 为返回几个 TF/IDF 权重最大的关键词，默认值为 20
#withWeight ： 为是否一并返回关键词权重值，默认值为 False
#allowPOS ： 仅包括指定词性的词，默认值为空，即不筛选

基于 TextRank 算法的关键词抽取
analyse.textrank(sentence, topK=20, withWeight=False, allowPOS=(‘ns’, ‘n’, ‘vn’, ‘v’))
十行版
import matplotlib.pyplot as plt
from wordcloud import WordCloud
import jieba

text_from_file_with_apath = open('').read()

wordlist_after_jieba = jieba.cut(text_from_file_with_apath, cut_all = True)
wl_space_split = " ".join(wordlist_after_jieba)

my_wordcloud = WordCloud().generate(wl_space_split)

plt.imshow(my_wordcloud)
plt.axis("off")
plt.show()
 

图片背景版
from scipy.misc import imread
import matplotlib.pyplot as plt
from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator
import random
import matplotlib as mpl

mpl.rcParams["font.sans-serif"] = ["SimHei"]
text = open("wordCloudV2.txt").read()
mask = imread("helmet.png")

def grey_color_func(word, font_size, position, orientation, random_state=None, **kwargs):
    return "hsl(0, 0%%, %d%%)" % random.randint(60, 100)

wc=WordCloud(background_color="white",max_words=2000,mask=mask,stopwords=STOPWORDS.add("said"),max_font_size=40)
wc.generate(text)
default_color = wc.to_array()

plt.title("灰色")
plt.imshow(wc.recolor(color_func=grey_color_func, random_state=3))
plt.axis("off")
wc.to_file("grey.jpg")

plt.figure()
plt.title("彩色")
plt.imshow(default_color)
plt.axis("off")
wc.to_file("color.jpg")

plt.show()

