Selenium使用
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait

browser = webdriver.Chrome()
try:
    browser.get("http://www.baidu.com")
    input = browser.find_element_by_id("kw")
    input.send_keys("Python")
    input.send_keys(Keys.ENTER)
    wait = WebDriverWait(browser,10)
    wait.until(EC.presence_of_element_located(By.ID,"content_left"))
    print(browser.current_url)      
    print(browser.get_cookie())
    print(browser.page_source)       #源代码
finally:
    browser.close()

查找节点
单个节点
find_element_by_id
find_element_by_name
find_element_by_xpath
find_element_by_link_text
find_element_by_partial_link_text
find_element_by_tag_name
find_element_by_class_name
find_element_by_css_selector
多个节点
find_elements_by_name
find_elements_by_xpath
find_elements_by_link_text
find_elements_by_partial_link_text
find_elements_by_tag_name
find_elements_by_class_name
find_elements_by_css_selector

节点交互
输入文字：send_keys()
清空文字：clear()
点击按钮：click()

获取节点信息
获取属性：get_attribute()
获取文本值：text
获取id：id

延时等待
隐式等待：只规定制定时间
browser.implicitly_wait(10)

显示等待：制定查找节点和最长等待时间，若加载出现则返回查找节点，否则报错
wait = WebDriverWait(browser,10)
input = wait.until(EC.presence_of_element_located(By.ID,"q"))
button = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,".btn-search")))




所有等待条件
WebDriverWait(browser,10).until(EC.title_is(u"百度一下，你就知道"))
#判断title,返回布尔值

WebDriverWait(browser,10).until(EC.title_contains(u"百度一下"))
#判断title，返回布尔值

WebDriverWait(browser,10).until(EC.presence_of_element_located((By.ID,'kw')))
#判断某个元素是否被加到了dom树里，并不代表该元素一定可见

WebDriverWait(browser,10).until(EC.visibility_of_element_located((By.ID,'su')))
#判断某个元素是否被添加到了dom里并且可见

WebDriverWait(browser,10).until(EC.visibility_of(browser.find_element(by=By.ID,value='kw')))
#判断元素是否可见，如果可见就返回这个元素

WebDriverWait(browser,10).until(EC.presence_of_all_elements_located((By.CSS_SELECTOR,'.mnav')))
#判断是否至少有1个元素存在于dom树中，如果定位到就返回列表

WebDriverWait(browser,10).until(EC.visibility_of_any_elements_located((By.CSS_SELECTOR,'.mnav')))
#判断是否至少有一个元素在页面中可见，如果定位到就返回列表

WebDriverWait(browser,10).until(EC.text_to_be_present_in_element((By.XPATH,"//*[@id='u1']/a[8]"),u'设置'))
#判断指定的元素中是否包含了预期的字符串，返回布尔值

WebDriverWait(browser,10).until(EC.text_to_be_present_in_element_value((By.CSS_SELECTOR,'#su'),u'百度一下'))
#判断指定元素的属性值中是否包含了预期的字符串，返回布尔值

WebDriverWait(browser,10).until(EC.frame_to_be_available_and_switch_to_it(locator))
判断该frame是否可以switch进去，如果可以的话，返回True并且switch进去，否则返回False
#注意这里并没有一个frame可以切换进去

WebDriverWait(browser,10).until(EC.invisibility_of_element_located((By.CSS_SELECTOR,'#swfEveryCookieWrap')))
#判断某个元素在是否存在于dom或不可见,如果可见返回False,不可见返回这个元素

WebDriverWait(browser,10).until(EC.element_to_be_clickable((By.XPATH,"//*[@id='u1']/a[8]")))
判断某个元素中是否可见并且是enable的，代表可点击
#WebDriverWait(browser,10).until(EC.element_to_be_clickable((By.XPATH,"//*[@id='wrapper']/div[6]/a[1]"))).click()

WebDriverWait(browser,10).until(EC.staleness_of(browser.find_element(By.ID,'su')))
#判断一个节点是否仍在，判断页面是否刷新

WebDriverWait(browser,10).until(EC.element_to_be_selected(browser.find_element(By.XPATH,"//*[@id='nr']/option[1]")))
#判断某个元素是否被选中了,一般用在下拉列表

WebDriverWait(browser,10).until(EC.element_selection_state_to_be(browser.find_element(By.XPATH,"//*[@id='nr']/option[1]"),True))
#判断某个元素的选中状态是否符合预期

WebDriverWait(browser,10).until(EC.element_located_selection_state_to_be((By.XPATH,"//*[@id='nr']/option[1]"),True))
#判断某个元素的选中状态是否符合预期

instance = WebDriverWait(browser,10).until(EC.alert_is_present())
#判断页面上是否存在alert,如果有就切换到alert并返回alert的内容
