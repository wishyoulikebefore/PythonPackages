需要消除样本不同属性具有不同量级时的影响：
1）数量级的差异将导致量级较大的属性占据主导地位
2）数量级的差异将导致迭代收敛速度减慢
3）依赖于样本距离的算法对于数据的数量级非常敏感

区间缩放（Min-Max scaling）： sklearn.preprocessing.MinMaxScaler
标准化（z-score standardization）：将原始数据归一化成均值为0、方差1的数据   scipy.stats.zscore
数据正则化

特征二值化：设置阈值，将特征的取值转化为0或1
from sklearn.preprocessing import Binarizer
Binarizer(threshold=3).fit_transform(iris.data)

one-hot编码
对于离散特征，例如，性别：｛男，女｝，可以采用one-hot编码的方式将特征表示为一个m维向量，其中m为特征的取值个数
在one-hot向量中只有一个维度的值为1，其余为0
用向量 “1，0”表示“男”，向量 “0，1”表示“女”，使用one-hot编码可将离散特征的取值扩展到了欧式空间，便于进行相似度计算
from sklearn.preprocessing import OneHotEncoder

处理缺失值
三种方法：1）直接使用含有缺失值的特征
         2）删除含有缺失值的特征（该方法在包含缺失值的属性含有大量缺失值而仅仅包含极少量有效值时是有效的）
         3）缺失值补全（常见的缺失值补全方法：均值插补、同类均值插补等）


通过特征提取，我们能得到未经处理的特征，这时的特征可能有以下问题：
1)不属于同一量纲，不能够放在一起比较。无量纲化可以解决这一问题。
2)信息冗余：对于某些定量特征，其包含的有效信息为区间划分，例如学习成绩，假若只关心“及格”或不“及格”。二值化可以解决这一问题。
3)定性特征不能直接使用：某些机器学习算法和模型只能接受定量特征的输入，那么需要将定性特征转换为定量特征。最简单的方式是为one-hot编码
4)存在缺失值：缺失值需要补充。
5)信息利用率低：不同的机器学习算法和模型对数据中信息的利用是不同的
#使用sklearn中的preproccessing库来进行数据预处理
