shutil模块
是一种高层次的文件操作工具,主要强大之处在于其对文件的复制与删除操作更是比较支持好。

FUNCTIONS
copy(src, dst, *, follow_symlinks=True)
#Copy data and mode bits ("cp src dst"). Return the file's destination.
    
copy2(src, dst, *, follow_symlinks=True)
#Copy data and all stat info ("cp -p src dst"). Return the file's destination."
在copy上的基础上再复制文件最后访问时间与修改时间也复制过来了	
    
copyfile(src, dst, *, follow_symlinks=True)
#Copy data from src to dst.

copyfileobj(fsrc, fdst, length=16384)
#copy data from file-like object fsrc to file-like object fdst    
    
copystat(src, dst, *, follow_symlinks=True)      复制状态
#Copy all stat info (mode bits, atime, mtime, flags) from src to dst.
    
copytree(src, dst, symlinks=False, ignore=None, copy_function=<function copy2 at 0x0000024CC62ACB70>, ignore_dangling_symlinks=False)   复制目录
#Recursively copy a directory tree.
#The destination directory must not already exist.

move(src, dst, copy_function=<function copy2 at 0x0000024CC62ACB70>)
#Recursively move a file or directory to another location. This is similar to the Unix "mv" command. 
    
rmtree(path, ignore_errors=False, onerror=None)   #可以删除非空目录（os.rmdir无法做到）
#Recursively delete a directory tree.

unpack_archive(filename,extract_dir=None)	解压缩文件

make_archive(base_name, format, root_dir=None)	压缩文件
#base_name：压缩完文件的名字
#format：bztar, gztar, tar, zip
#root_dir：压缩文件的起始位置（默认当前目录）
 
使用requests下载资源
import requests
import shutil

r=requests.get(url,stream=True)
if r.status_code == 200:
	with open(path,’wb’) as f:
		shutil.copyfileobj(r.raw,f)
del r
