1. datetime模块
import datetime

获得年，月，日
In [2]: now = datetime.datetime.now()
In [3]: now
Out[3]: datetime.datetime(2018, 5, 27, 22, 14, 48, 47712)
In [4]: now.year,now.month,now.day
Out[4]: (2018, 5, 27)

获得时间差
In [5]: delta = now- datetime.datetime (2018,5,10)
In [7]: delta.days
Out[7]: 17

In [11]: datetime.datetime(2018,5,10)+datetime.timedelta(10)
Out[11]: datetime.datetime(2018, 5, 20, 0, 0)

字符串和datetime的相互转换
1）datetime转化为字符串
In [12]: stamp = datetime.datetime(2018,5,10)
In [13]: str(stamp)
Out[13]: '2018-05-10 00:00:00'

2）字符串转换为日期（strptime）
In [14]: value = "2018-05-10"
In [17]: datetime.datetime.strptime(value,"%Y-%m-%d")
Out[17]: datetime.datetime(2018, 5, 10, 0, 0)

时间戳转化为datetime（fromtimestamp）
In [18]: datetime.datetime.fromtimestamp(os.path.getmtime("000014.csv"))

判断是否为周末：datetime模块
date.isoweekday()
#Return the day of the week as an integer, where Monday is 1 and Sunday is 7
date.weekday()
#Return the day of the week as an integer, where Monday is 0 and Sunday is 6

使用dateutil.parser.parse，可以解析几乎所有的日期表示形式(或者dateparser.parse)
In [20]: from dateutil.parser import parse
In [22]: parse("6/12/2011",dayfirst=True)   
#国际格式中日会出现在月前：日/月/年，而一般是月/日/年，
Out[22]: datetime.datetime(2011, 12, 6, 0, 0)

2. pandas

生成时间段：date_range()
1）指定开始日期和时间段
In [3]:rng = pd.date_range('1/1/2011', periods=72, freq='H')
2）指定开始日期和终止日期
In [4]:rng = pd.date_range(datetime.datetime(2011, 1, 1), datetime.datetime(2012, 1, 1))
3）指定终止日期和时间段
In [5]:rng = pd.date_range(end=datetime.datetime(2011, 1, 1), periods=20)
#bdate_range() 只输出工作日

改变时间间隔：asfreq()
In [6]:converted = ts.asfreq('45Min', method='pad')

日期格式的转化
1）Timestamp
#数字生成日期
In [8]: pd.Timestamp('2012-05-01')
或者
In [8]: pd.Timestamp(datetime.datetime(2012, 5, 1))
Out[8]: Timestamp('2012-05-01 00:00:00')

2）Period（可根据要求填充完整）
In [10]: pd.Period('2011-01')
Out[10]: Period('2011-01', 'M')
In [11]: pd.Period('2012-05', freq='D')
Out[11]: Period('2012-05-01', 'D')

某一时间点，往前后加一段时间
d = pd.datetime(2008, 8, 18, 9, 0)
from pandas.tseries.offsets import *
---------------------------------------------
In [87]: d + DateOffset(months=4, days=5)
Out[87]: Timestamp('2008-12-23 09:00:00')
---------------------------------------------
In [88]: d - 5 * BDay()      #减去5个工作日
Out[88]: Timestamp('2008-08-11 09:00:00')
---------------------------------------------
In [89]: d + BMonthEnd()     #月末工作日
Out[89]: Timestamp('2008-08-29 09:00:00')
---------------------------------------------
In [105]: d + Week(weekday=4)
Out[105]: Timestamp('2008-08-22 09:00:00')
In [106]: (d + Week(weekday=4)).weekday()
Out[106]: 4
---------------------------------------------

时间序列的索引处理：shift
---------------------------------------------
In [215]: ts.shift(5, freq=datetools.bday)
Out[215]: 
2011-02-07   -1.281247
2011-03-07   -0.727707
2011-04-07   -0.121306
2011-05-06   -0.097883
2011-06-07    0.695775
dtype: float64
---------------------------------------------
In [216]: ts.shift(5, freq='BM')
Out[216]: 
2011-06-30   -1.281247
2011-07-29   -0.727707
2011-08-31   -0.121306
2011-09-30   -0.097883
2011-10-31    0.695775
Freq: BM, dtype: float64
---------------------------------------------

