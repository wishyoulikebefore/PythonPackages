matplotlib.axes.Axes.pcolormesh()
创造非规则矩形网格的伪彩色图，比pcolor速度更快
-------------------------------------------
参数
C : array_like， The values will be color-mapped
X, Y : array_like, 四边形角坐标
cmap : The colormap maps the C values to colors. Defaults to rcParams["image.cmap"]
norm : Normalize, optional
#The Normalize instance scales the data values to the canonical colormap range [0, 1] for mapping to colors
vmin, vmax : scalar, optional, default: None
#The colorbar range. If None, suitable min/max values are automatically chosen by the Normalize instance 
edgecolors : {'none', None, 'face', color, color sequence}, optional
The color of the edges

画垂直线
vlines(x, ymin, ymax)
hlines(y, xmin, xmax)
---------------------------------------
plt.vlines(0, 0, 0.5, colors = "c", linestyles = "dashed")

自定义渐变色

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap

# Create custom colormaps
cdict = {'red': ((0.0, 1.0, 1.0),   # Full red at the first stop
                 (0.5, 0.0, 0.0),   # No red at second stop
                 (1.0, 1.0, 1.0)),  # Full red at final stop
        #
        'green': ((0.0, 0.0, 0.0),  # No green at all stop
                 (0.5, 0.0, 0.0),   # 
                 (1.0, 0.0, 0.0)),  # 
        #
        'blue': ((0.0, 0.0, 0.0),   # No blue at first stop
                 (0.5, 1.0, 1.0),   # Full blue at second stop
                 (1.0, 0.0, 0.0))}  # No blue at final stop

cmap = LinearSegmentedColormap('Rd_Bl_Rd', cdict, 256)
im = np.outer(np.ones(10), np.linspace(0, 255, 256))
fig = plt.figure(figsize=(9, 2))
ax = fig.add_subplot('111')
ax.set_xticks(np.linspace(0, 255, 3))
ax.set_xticklabels([0, 0.5, 1])
ax.set_yticks([])
ax.set_yticklabels([])
ax.imshow(im, interpolation='nearest', cmap=cmap)


