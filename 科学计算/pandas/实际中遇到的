1)删除所有值相同的列
df.ix[:,(df!=df.ix[0]).any()]      df!=df.ix[0]为逐行处理
引申：删除所有值相同的行（不使用df.T进行行列转换）
df.ix[df.apply(lambda x:x!=x[0],axis=1).any(axis=1)]

2）删除存在0的列
df.ix[:,df.all()]
引申：删除存在0的行
df.ix[df.all(axis=1)
引申：删除所有值均为0的行
df.ix[df.any(axis=1)]

3)分列
df['柜台名称'].str.split('-',expand=True) 
df["订单号"].str[:4]
df["订单号"].extract("(\d+)")

4）解决console显示值省略
pd.set_option('display.max_colwidth',1000)

5）矢量化的字符串函数：通过Series.str属性访问
-----------------------------------------------------
contains	
count	
endswith、startswith	
get	获取各元素的第i个字符
count
len	
lower、upper	
match	根据指定的正则表达式对各个元素执行re.match
repeat	重复值。例如s.str.repeat(3)相当于对各个字符串执行x * 3
replace	用指定字符串替换找到的模式
-----------------------------------------------------
df["type"] = df.index.str[-1]
df["A"].str.contains("cc")

6）对于一个dataframe：df[""]返回Series，而df[[""]]返回DataFrame，这在使用sklearn模块时很有用

7）透视与逆透视的相互转换
类似melt后的数据
       cell  count
gene
33665     1      5
33663     1      4
33662     1     10
33660     1     11
33659     1     13
33658     1     10
33656     1     14
33655     1     39
33654     1     26
33653     1      8
33636     1      1
使用pivot_table进行转换
      count                                                       ...
cell   1     2     3     4     5     6    7     8     9     10    ...   5011  5012  5013  5014  5015  5016  5017  5018  5019  5020
gene                                                              ...
4       NaN   NaN   NaN   NaN   NaN   NaN  NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
5       NaN   NaN   NaN   NaN   NaN   NaN  NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
9       NaN   NaN   NaN   NaN   NaN   NaN  NaN   NaN   NaN   NaN  ...    NaN   NaN   1.0   NaN   NaN   NaN   NaN   NaN   NaN   NaN
10      NaN   NaN   NaN   NaN   NaN   NaN  NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
13      NaN   NaN   NaN   NaN   NaN   NaN  NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
15      NaN   NaN   NaN   NaN   NaN   NaN  NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN
19      NaN   NaN   NaN   NaN   NaN   NaN  NaN   NaN   NaN   NaN  ...    NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN   NaN

8）pandas广播
默认情况下，DataFrame和Series之间的算术运算会将Series的索引匹配到DataFrame的列，然后沿着行一直向下广播
#在行上进行广播  frame-series
如果匹配行且在列上广播，则必须使用算术运算方法（add sub mul div）
#在列上进行广播  frame.sub(series1,axis=0)

